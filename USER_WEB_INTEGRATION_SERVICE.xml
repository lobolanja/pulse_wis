<!-- RTI Data Distribution Service Deployment -->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/6.0.1/6.0.0/rti_web_integration_service.xsd">

    <!--
        Note that WIS doesn't like including the system designer config file directly, and
		didn't like the "module" definitions, or the references that stem from the modul-ization
		of the types in that file.  SO I peeled out the types, de-modulified them and stored
		the result in this "MedicalDemoTypes.xml" file for configuring type information for 
		this WIS instance...
    -->
    <types>
    <!--
    <include file="MedicalDemoTypes.xml" />
    -->
    <!--
      <module name="RTI">
        <module name="CONSTANTS">
		-->
          <const name="QOS_LIBRARY" type="string" value="&quot;Demo_Qos_Lib&quot;"/>
          <const name="BASE_PARTICIPANT_QOS" type="string" value="&quot;Base_Participant_Qos&quot;"/>
          <const name="BEST_EFFORT_DEADLINE_QOS" type="string" value="&quot;Best_Effort_Deadline_Qos&quot;"/>
          <const name="COMMAND_RESPONSE_QOS" type="string" value="&quot;Command_Response_Qos&quot;"/>
          <const name="DURABLE_STATE_QOS" type="string" value="&quot;Durable_State_Qos&quot;"/>
          <const name="EVENTS_ALARMS_QOS" type="string" value="&quot;Events_Alarms_Qos&quot;"/>
          <const name="BATCHED_SAMPLES" type="string" value="Batched_Samples_Qos"/>
    <!--
        </module>
        <module name="TYPES">
		-->
          <typedef name="TimeStamp_t" type="int64"/>
          <struct name="Duration_t" nested="true">
            <member name="sec" type="int32"/>
            <member name="nanosec" type="int32"/>
          </struct>
          <typedef name="AnalogReadng_t" type="uint16"/>
          <typedef name="Voltage_t" type="float32"/>
          <typedef name="Temperature_t" type="float32"/>
          <enum name="Temperature_Units_t">
            <enumerator name="DEGREES_C"/>
            <enumerator name="DEGREES_F"/>
            <enumerator name="DEGREES_K"/>
          </enum>
          <typedef name="Percentage_t" type="float32"/>
    <!--
        </module>
        <module name="SENSOR">
		-->
          <const name="SENSOR_PERIODICS_TOPIC" type="string" value="&quot;SensorPeriodics&quot;"/>
          <const name="SENSOR_INFO_TOPIC" type="string" value="&quot;SensorInfo&quot;"/>
          <const name="SENSOR_CONFIG_TOPIC" type="string" value="&quot;SensorConfig&quot;"/>
          <struct name="_sensor_id_t" nested="true">
            <member name="SensorTag" type="string" stringMaxLength="32" key="true"/>
          </struct>
          <typedef name="SensorID_t" type="nonBasic" nonBasicTypeName="_sensor_id_t"/>
          <struct name="SensorPeriodics" extensibility="appendable">
            <member name="id" type="nonBasic" nonBasicTypeName="SensorID_t"/>
            <member name="timestamp" type="nonBasic" nonBasicTypeName="TimeStamp_t"/>
            <member name="exampleSensorReading" type="float32"/>
          </struct>
          <struct name="SensorInfo" extensibility="appendable">
            <member name="id" type="nonBasic" nonBasicTypeName="SensorID_t"/>
            <member name="parameter1" type="int32"/>
          </struct>
          <struct name="SensorConfig" extensibility="appendable">
            <member name="id" type="nonBasic" nonBasicTypeName="SensorID_t"/>
            <member name="units" type="nonBasic" nonBasicTypeName="Temperature_Units_t"/>
            <member name="calibrationFactors" type="float32" sequenceMaxLength="3"/>
          </struct>
    <!--
        </module>
        <module name="PATIENT">
		-->
          <const name="PATIENT_INFO_TOPIC" type="string" value="&quot;PatientInfo&quot;"/>
          <const name="PATIENT_PERIODICS_TOPIC" type="string" value="&quot;PatientPeriodics&quot;"/>
          <const name="PATIENT_CONFIG_TOPIC" type="string" value="&quot;PatientConfig&quot;"/>
          <enum name="PATIENT_ALARM_TYPE">
            <enumerator name="NO_ALARM" value="0"/>
            <enumerator name="PULSE_LOW" value="1"/>
            <enumerator name="PULSE_HIGH" value="2"/>
            <enumerator name="PULSE_SENSOR_ERROR" value="3"/>
          </enum>
          <struct name="_patient_id_t" nested="true">
            <member name="Id" type="string" stringMaxLength="32" key="true"/>
          </struct>
          <typedef name="Patient_ID_t" type="nonBasic" nonBasicTypeName="_patient_id_t"/>
          <struct name="PatientPulse" baseType="Patient_ID_t">
            <member name="timestamp" type="nonBasic" nonBasicTypeName="TimeStamp_t"/>
            <member name="readings" type="uint32" sequenceMaxLength="100"/>
          </struct>
          <struct name="PatientInfo" baseType="Patient_ID_t">
            <member name="FirstName" type="string" stringMaxLength="32"/>
            <member name="LastName" type="string" stringMaxLength="32"/>
            <member name="Age" type="uint32"/>
            <member name="HeightCm" type="uint32"/>
            <member name="WeightKg" type="uint32"/>
            <member name="Sex" type="string" stringMaxLength="32"/>
          </struct>
          <struct name="PatientConfig" baseType="Patient_ID_t">
            <member name="PulseHighThreshold" type="uint32" default="200"/>
            <member name="PulseLowThreshold" type="uint32" default="0"/>
          </struct>
    <!--
        </module>
      </module>
		-->
	</types>

    <!--
        Configuration for the Pulse Demo WIS instance.
		This assumes that the QoS from the system designer config is peeled out and stored
		in "USER_QOS_PROFILES.xml" in the working directory that also contains this config
		file for WIS.
    -->
    <web_integration_service name="PulseWis">
        <application name="PulseWisApp">
            <domain_participant name="PulseWisParticipant" domain_id="0">

                <register_type name="PatientPulse" type_ref="PatientPulse" />
                <register_type name="PatientInfo" type_ref="PatientInfo" />
                <register_type name="PatientConfig" type_ref="PatientConfig" />

                <topic name="Pulse" register_type_ref="PatientPulse"/>
                <topic name="Info" register_type_ref="PatientInfo" />
                <topic name="Config" register_type_ref="PatientConfig" />

                <subscriber name="PulseWisSubscriber">
                    <data_reader name="PatientPulseReader" topic_ref="Pulse"/>
					<!-- ***!!! WIS doesn't like this particular QoS "inconsistent QoS policy"!!!***
                        <datareader_qos base_name="RTI_Eval_Qos_Library_1_0::Periodic_Reliable"/>
					</data_reader>
                    -->
                    <data_reader name="PatientInfoReader" topic_ref="Info"/>
					<!--
                        <datareader_qos base_name="RTI_Eval_Qos_Library_1_0::Alarms_Events"/>
                    </data_reader>
					-->
                    <data_reader name="PatientConfigReader" topic_ref="Config"/>
					<!--
                        <datareader_qos base_name="RTI_Eval_Qos_Library_1_0::Command_Response"/>
                    </data_reader>
					-->
                </subscriber>

                <!--
                <participant_qos base_name="RTI_Eval_Qos_Library_1_0::Base_Participant_QoS" />
                -->

            </domain_participant>
        </application>
    </web_integration_service>

</dds>
